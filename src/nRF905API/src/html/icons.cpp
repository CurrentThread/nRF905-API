#include "html.h"		// HTTP_CODE_*
#include "icons.h"		// ICON_*

void iconsAddHandlers(void) {
	server.on(FPSTR(ICON_FAVICON_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_FAN));		});
	server.on(FPSTR(ICON_CHECK_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_CHECK));		});
	server.on(FPSTR(ICON_DICE_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_DICE));		});
	server.on(FPSTR(ICON_ERROR_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_ERROR));		});
	server.on(FPSTR(ICON_FAN_URL),			HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_FAN));		});
	server.on(FPSTR(ICON_INFO_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_INFO));		});
	server.on(FPSTR(ICON_LANGUAGE_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_LANGUAGE));		});
	server.on(FPSTR(ICON_MORE_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_MORE));		});
	server.on(FPSTR(ICON_PENDING_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_PENDING));		});
	server.on(FPSTR(ICON_POWER_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_POWER));		});
	server.on(FPSTR(ICON_POWER_OFF_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_POWER_OFF));		});
	server.on(FPSTR(ICON_REBOOT_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_REBOOT));		});
	server.on(FPSTR(ICON_REMOTE_CONTROL_URL),	HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_REMOTE_CONTROL));	});
	server.on(FPSTR(ICON_RF_URL),			HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_RF));		});
	server.on(FPSTR(ICON_SEARCH_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_SEARCH));		});
	server.on(FPSTR(ICON_SECURITY_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_SECURITY));		});
	server.on(FPSTR(ICON_SETTINGS_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_SETTINGS));		});
	server.on(FPSTR(ICON_SYNC_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_SYNC));		});
	server.on(FPSTR(ICON_SYNC_PROBLEM_URL),	HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_SYNC_PROBLEM));	});
	server.on(FPSTR(ICON_VISIBILITY_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_VISIBILITY));	});
	server.on(FPSTR(ICON_VISIBILITY_OFF_URL),	HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_VISIBILITY_OFF));	});
	server.on(FPSTR(ICON_WARNING_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_WARNING));		});
	server.on(FPSTR(ICON_WIFI_URL),		HTTP_GET, []() {server.send(HTTP_CODE_OK, FPSTR(HTTP_SVGXML_RESPONSE), FPSTR(ICON_WIFI));		});
}

